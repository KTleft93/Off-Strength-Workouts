{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Projects/off-strength-workouts/client/src/components/forgotpassword.component.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailSent, setEmailSent] = useState(false);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const body = {\n      email\n    };\n    axios({\n      url: \"/auth/forgot\",\n      data: body,\n      method: \"post\"\n    }).then(res => {\n      setEmailSent(true);\n    });\n  };\n\n  let body;\n\n  if (emailSent) {\n    body = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"An email with reset instructions is on its way\");\n  } else {\n    body = React.createElement(Form, {\n      onSubmit: submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"email\",\n      placeholder: \"email\",\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Get reset link\")));\n  }\n\n  return body;\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/apple/Desktop/Projects/off-strength-workouts/client/src/components/forgotpassword.component.js"],"names":["React","Component","axios","ForgotPassword","email","setEmail","useState","emailSent","setEmailSent","submitHandler","e","preventDefault","body","url","data","method","then","res","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAEzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMG,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACTR,MAAAA;AADS,KAAb;AAGAF,IAAAA,KAAK,CAAC;AACFW,MAAAA,GAAG,EAAE,cADH;AAEFC,MAAAA,IAAI,EAAEF,IAFJ;AAGFG,MAAAA,MAAM,EAAE;AAHN,KAAD,CAAL,CAIGC,IAJH,CAIQC,GAAG,IAAI;AACXT,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAND;AAOH,GAZD;;AAcA,MAAII,IAAJ;;AACA,MAAIL,SAAJ,EAAe;AACXK,IAAAA,IAAI,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ;AAGH,GAJD,MAIO;AACHA,IAAAA,IAAI,GACA,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,WAAW,EAAC,OAFhB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAEL,KAJX;AAKI,MAAA,QAAQ,EAAEM,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAVJ,CADJ;AAgBH;;AAED,SACIP,IADJ;AAGH,CA9CD;;AAgDA,eAAeT,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\n\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [emailSent, setEmailSent] = useState(false);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const body = {\n            email,\n        };\n        axios({\n            url: \"/auth/forgot\",\n            data: body,\n            method: \"post\",\n        }).then(res => {\n            setEmailSent(true);\n        })\n    }\n\n    let body;\n    if (emailSent) {\n        body = (\n            <span>An email with reset instructions is on its way</span>\n        );\n    } else {\n        body = (\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Input\n                        name=\"email\"\n                        placeholder=\"email\"\n                        type=\"text\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                </Row>\n                <Row>\n                    <Button>Get reset link</Button>\n                </Row>\n            </Form>\n        );\n    }\n\n    return (\n        body\n    );\n};\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}